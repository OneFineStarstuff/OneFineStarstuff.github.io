# === TURNING WHEEL BACKEND ENVIRONMENT CONFIGURATION ===

# === APPLICATION ===
NODE_ENV=development
PORT=8080

# === DATABASE (PostgreSQL) ===
DB_HOST=localhost
DB_PORT=5432
DB_NAME=turning_wheel
DB_USER=postgres
DB_PASSWORD=your_secure_password

# Database SSL (for production)
DB_SSL_CA=
DB_SSL_CERT=
DB_SSL_KEY=

# Database Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_IDLE_TIMEOUT=30000
DB_CONNECTION_TIMEOUT=2000
DB_STATEMENT_TIMEOUT=30000
DB_QUERY_TIMEOUT=30000

# === REDIS (for caching and sessions) ===
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# === JWT CONFIGURATION ===
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_jwt_secret_key_minimum_32_characters_long
JWT_REFRESH_SECRET=your_jwt_refresh_secret_key_minimum_32_characters_long
JWT_EXPIRY=15m
JWT_REFRESH_EXPIRY=7d

# === ENCRYPTION ===
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
MASTER_ENCRYPTION_KEY=your_base64_encoded_32_byte_master_key

# === EXTERNAL SERVICES ===
FRONTEND_URL=http://localhost:3000

# Image Generation Service
IMAGEAPI_BASE=
IMAGEAPI_KEY=

# === EMAIL (SMTP) ===
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# === WEBHOOKS ===
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
N8N_WEBHOOK_URL=
GRAFANA_SLACK_WEBHOOK=

# === LOGGING ===
LOG_LEVEL=info
LOG_DIR=logs

# === SECURITY ===
# Rate limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=900000

# HMAC for webhook signing
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
HMAC_SECRET=your_hmac_secret_key_for_webhook_signing

# === FILE UPLOAD ===
MAX_FILE_SIZE=10485760
UPLOAD_DIR=uploads

# === MONITORING & ANALYTICS ===
TIMESCALE_URL=postgres://vc:vcpass@localhost:5432/visual

# === GOOGLE DRIVE (Optional) ===
GDRIVE_FOLDER_ID=
GDRIVE_SERVICE_JSON_PATH=/secrets/gdrive-service.json

# === DEVELOPMENT ===
# Set to true to enable debug logging
DEBUG=false

# === PRODUCTION SECURITY ===
# Only set these in production
SECURE_TOKEN=your_secure_api_token_for_production

# === SSL/TLS ===
# For HTTPS in production
SSL_KEY_PATH=
SSL_CERT_PATH=
SSL_CA_PATH=

# === CORS ===
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# === SESSION ===
SESSION_SECRET=your_session_secret_key_minimum_32_characters

# === ANALYTICS ===
# Google Analytics or other analytics services
GA_TRACKING_ID=
ANALYTICS_ENABLED=false

# === ERROR REPORTING ===
# Sentry DSN for error reporting
SENTRY_DSN=
ERROR_REPORTING_ENABLED=false

# === FEATURE FLAGS ===
FEATURE_ENCRYPTION_ENABLED=true
FEATURE_RATE_LIMITING_ENABLED=true
FEATURE_ANALYTICS_ENABLED=true
FEATURE_FILE_UPLOAD_ENABLED=true

# === BACKUP ===
# Database backup configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=
BACKUP_S3_ACCESS_KEY=
BACKUP_S3_SECRET_KEY=

# === HEALTH CHECKS ===
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30000

# === PERFORMANCE ===
# Enable compression
COMPRESSION_ENABLED=true
COMPRESSION_LEVEL=6

# Cache settings
CACHE_TTL=300
CACHE_MAX_SIZE=100

# === NOTES ===
# 1. Never commit this file with real secrets
# 2. Use strong, unique passwords for production
# 3. Rotate secrets regularly
# 4. Use a secret management service in production
# 5. Enable SSL/TLS in production
# 6. Set up proper monitoring and logging
# 7. Configure backups for production databases
